import Head from 'next/head';
import { useContext } from "react"
import NoSSR from 'react-no-ssr';
import { DragDropContext, Droppable } from 'react-beautiful-dnd';

import Words from '../components/Words'
import Categories from '../components/Categories'
import { StorageContext } from "../StorageContext"

import styles from '../styles/Home.module.scss'

export default function Home() {
  const context = useContext(StorageContext);
  const cateGories = Object.keys(context.cateGories);
  let wordArr = context.wordsArray;

  const onWordDrag = (result) => {
    console.log(result);
    const {destination, source, draggableId} = result;
    const selectedWord = draggableId.toLowerCase();
    const wordCategory = destination !== null ? context.cateGories[destination.droppableId] : returnFn();

    function returnFn() {
      return;
    }

    if (wordCategory && wordCategory.indexOf(draggableId) > -1) {
      return;
    }

    /* if (destination.droppableId === source.droppableId &&
        destination.index === source.index) {
      return;
    } */

    if (destination && destination.index === 0 && selectedWord.substring(0, 1) === destination.droppableId) {
      wordCategory.push(draggableId);
      // below code is throwing error when opened
      // wordArr = wordArr.filter(word => word !== draggableId);
    }
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>A E I O U</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to A E I O U Game
        </h1>

        <p className={styles.description}>
          Drag the word-cards and Drop them in the matching category 
        </p>
        <NoSSR>
          <DragDropContext onDragEnd={onWordDrag}>
            <div className='row'>
              {
                cateGories.map((category) => (
                  <Categories categoryId={category} key={category}></Categories>
                ))
              }
            </div>
            <div className='row'>
              <Droppable droppableId='droppable' direction='horizontal'>
                {(prov) => (
                  <div className={'col-12 ' + styles.grid} style={{margin: 0 + ' auto'}}>
                    {
                      wordArr.map((word, index) => (
                        <div {...prov.droppableProps} ref={prov.innerRef} className={'col-2 ' + styles.grid} key={index}>
                          <Words id={word} index={index} key={index}></Words>
                        </div>
                      ))
                    } 
                    {prov.placeholder}
                  </div>
                )}
              </Droppable>
            </div>
          </DragDropContext>
        </NoSSR>
      </main>

      <footer className={styles.footer}>
        Developed by AJ
      </footer> 
    </div>
  )
}

